setpath () 
{ 
    function _presolve () 
    { 
        here=${PWD};
        cd $1;
        PWD=`pwd`;
        case $PATH in 
            *:$PWD:* | *:$PWD | $PWD:*)

            ;;
            *)
                PATH=$PATH:$PWD;
                export PATH
            ;;
        esac;
        cd $here
    };
    case $1 in 
        */bin)
            _presolve $1
        ;;
        *)
            echo "USAGE: setpath {some}/bin" 1>&2
        ;;
    esac
}
do_set_path () 
{ 
    echo .;
    echo $PATH | tr ':' '\012' | grep /bin | sed "s/\/bin/\/$1/"
}
set_path () 
{ 
    do_set_path $1 | tr '\012' ':'
}
whipath () 
{ 
    for dir in $(do_set_path include);
    do
        [[ -f $dir/$1 ]] && { 
            printf "%s" $dir/$1;
            return
        };
    done
}
require () 
{ 
    tool=$1;
    shift;
    bin=$1/bin;
    shift;
    paths | grep $bin || return;
    set -- $(which $tool);
    [[ "$1" == $bin/$tool ]] && return;
    setpath $bin
}
setpathlib_doc () 
{ 
    comment bkup: appleton.home./Users/applemcg/bin 2012_0527 091440
}
setpathlib_init () 
{ 
    : ${INCLUDE_PATH:=$(set_path include)};
    comment setpathlib_doc
}
paths () 
{ 
    eval echo \$${1:-PATH} | sed 's/::/:.:/' | tr : '\012'
}
bitmeld () 
{ 
    pushd ${1:-.} > /dev/null;
    while true; do
        for dir in src bin include tmp man etc lib doc;
        do
            [[ -d $dir ]] && break 2;
        done;
        cd ..;
        case $PWD in 
            /)
                break
            ;;
        esac;
    done;
    pwd;
    popd > /dev/null
}
setpathlib_init
