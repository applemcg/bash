gitapp_init () 
{ 
    return
}
gitlib_init () 
{ 
    source programlib 2> /dev/null;
    gitapp_init
}
mods () 
{ 
    git status | findClean modified:;
    git status | findClean "new file:"
}
findClean () 
{ 
    grep "$1" - | sed "s/.*$1 *//"
}
git () 
{ 
    case $1 in 
        modified)
            command git status | awk '
            /not staged/      {ready++};
            /to be committed/ {ready++}; 
            #            { print "debug: ", ready, $0 }
            ready && ($2 ~ /^modified:$/) { print $3 }
            ready && ($3 ~ /^file:$/)     { print $4 }
           '
        ;;
        hub)
            echo git@github.com:applemcg/$(basename $PWD).git
        ;;
        remo)
            command git remote add origin $(git hub);
            command git push -u origin master
        ;;
        push)
            command git push $(git hub);
            command git pull $(git hub)
        ;;
        add)
            shift;
            command git add $(git modified) $*
        ;;
        name)
            ignore pushd .;
            while [[ $PWD != "/" ]]; do
                [[ -d .git ]] && { 
                    basename $PWD;
                    break
                };
                cd ..;
            done;
            ignore popd
        ;;
        list)
            indir $HOME ls -d */.git src/*/.git git/*/.git | sed 's/..git$//'
        ;;
        help)
            functions ~/bin/gitlib;
            fbdy git | grep '^ *[a-z[a-z]*)$' | sed 's/)$//; s/ */git /' | sort;
            git --help
        ;;
        files)
            shift;
            command git ls-files $*
        ;;
        ssh)
            echo https://github.com/applemcg/$(basename $PWD).git
        ;;
        *)
            command git "$@"
        ;;
    esac
}
gitlib_init
