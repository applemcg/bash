gitapp_init () 
{ 
    return
}
gitlib_init () 
{ 
    source bootlib;
    sourceOneTime programlib 2> /dev/null;
    gitapp_init
}
mods () 
{ 
    git status | findClean modified:;
    git status | findClean "new file:"
}
findClean () 
{ 
    grep "$1" - | sed "s/.*$1 *//"
}
git_modified () 
{ 
    git status | awk '
            /not staged/      {ready++};
            /to be committed/ {ready++}; 
            #            { print "debug: ", ready, $0 }
            ready && ($2 ~ /^modified:$/) { print $3 }
            ready && ($3 ~ /^file:$/)     { print $4 }
           '
}
git_remo () 
{ 
    git remote add origin git@github.com:applemcg/$(basename $PWD).git
    git push -u origin master
}
git_push () 
{ 
    git push git@github.com:applemcg/$(basename $PWD).git
}
git_add () 
{ 
    git add $(git_modified) $*
}
git_name () 
{ 
    ignore pushd .;
    while [[ $PWD != "/" ]]; do
        [[ -d .git ]] && { 
            basename $PWD;
            break
        };
        cd ..;
    done;
    ignore popd
}
gitlib_init
git_list () 
{ 
    indir $HOME ls -d */.git src/*/.git git/*/.git | sed 's/..git$//';
}
git_help () 
{ 
    functions ~/bin/gitlib
}
git_files () 
{ 
    git ls-files $*
}
