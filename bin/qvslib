
qvs_init () 
{
    source smartfli;
    source bkuplib;
    source mmklib;  comment for qi_lncp
    source cmdlib; 
    comment bkup: appleton.home./Users/applemcg/git/bash-functions/bin 2013_0821 191907;
}
qvs_help () 
{ 
    functions $(which qvslib)
}
qvs_setbase () 
{ 
    remark TRACE $# qvs_setbase $* PWD $PWD;
    path=${PATH//:/ };
    for p in $(echo ${path//\/bin/}) $SYSTEM_DEPENDENT_USER_HOME;
    do
        comment p $p;
        case ${PWD} in 
            $p/*)
                smartf_is VER_BASE $p;
                qvs_getbase;
                return
            ;;
        esac;
    done
}
qvs_getbase () 
{ 
    remark "VER_BASE=$VER_BASE, PWD=${PWD}, RWD=$(qvs_rwd)"
}
qvs_verbase () 
{ 
    remark TRACE $# qvs_verbase $* PWD $PWD;
    case ${PWD} in 
        $VER_BASE/*)
            case $VER_BASE in 
                "")
                    qvs_setbase
                ;;
                *)
                    qvs_getbase
                ;;
            esac
        ;;
        *)
            qvs_setbase
        ;;
    esac
}
qvs_home () 
{ 
    echo ${VER_HOME:-$HOME}
}
qvs_from () 
{ 
    smartf_is VER_BASE ${1:-$HOME};
    smartf_is VER_HOME ${1:-$VER_BASE};
    comment qvs_home, verbase
}
qvs_to () 
{ 
    smartf_is VER_HOME ${1:-$HOME};
    comment qvs_home
}
qvs_rwd () 
{ 
    remark TRACE $# qvs_rwd $* PWD $PWD VER_BASE $VER_BASE
    echo ${PWD#${VER_BASE:-$HOME}}
}
qvs_locn () 
{     
    remark TRACE $# qvs_locn $* VER_HOME $VER_HOME
    echo ${VER_HOME:-$HOME}
}
_mkVername () 
{ 
    remark TRACE $# _mkVername $* PWD $PWD
    [[ -d $(qvs_locn)/$1 ]] && { 
        echo Ver
        exit 3
    };
    echo $1
}
qvs () 
{ 
    qvs_qcmd="qvs_$1";
    declare -f $qvs_qcmd > /dev/null || { 
        qvs_qrf 1>&2;
        return
    };
    shift;
    $qvs_qcmd "$@"
}
qvs_list () 
{ 
    remark TRACE $# qvs_list $* PWD $PWD
    shell_indir .bak shell_onlyfiles
}
qvs_second () 
{ 
    date '+%Y_%m%d_%H%M%S'
}
thisSecond () 
{ 
    date '+%Y%m%d%H%M%S'
}
_doqvs () 
{ 
    bkup $*;
    for f in "$@";
    do
        [[ -f .bak/$f ]] && echo .bak/$f;
    done
}
qver () 
{ 
    set -- ${1:-last};
    case $1 in 
        last)
            ls -t $(qvs_locn) | sed 1q
        ;;        names)
            ls -t $(qvs_locn) | grep -v '^2[0-9][0-9]*$'
        ;;        named)
            qver names | sed 1q
        ;;
        *)
            comment "qver [last|names|named -> last]"
        ;;
    esac
}
qvs_directory () 
{ 
    echo $(qvs_locn)/$(${1:-lastVer})
}
qvs_man () 
{ 
    open ~/man/man1/qvslib.html
}
qvs_clog () 
{ 
    cat  <<EOF

2012_0211, Sat, Feb 11   changed default qvs_locn to YYYY_MMDD_HHMMSS format, adding _s
2013_0820, Tue, Aug 20	 adopting LIB_cmmd co

EOF

}
qws_latestdir () 
{ 
    function qvs_onedir  () 
    { 
        echo $1/$(ls -t $1 | sed 1q)
    }
    shell_foreach qvs_onedir $(find $* -type d -name .ver)
}
qvs_need () 
{ 
    remark TRACE $# qvs_need $* PWD $PWD
    set -- $(ls -t .ver);
    find . -newer .ver/$1 -type f
}
qvs_changes () 
{ 
    find .ver -type f | xargs ls -i | sort -n | awk '{ if( printed[$1]++) next} ; { print $2}'
}
qvs_do () 
{ 
    function lnS () 
    { 
        _do_cp ${PWD}/$2 $1
    };
    function _do_cp () 
    { 
        comment cp $*;
        cp $*
    };
    function _do_ln () 
    { 
        comment ln $*;
        ln $*
    };
    function _qvs_hardlink () 
    { 
        target=$1;
        shift 2;
        _do_ln $* $target
    };
    function _qvs_softlink () 
    { 
        foreachi lnS $*
    };
    function _qvs_ln () 
    { 
        ln $2 $1 2> /dev/null && { 
            _qvs_hardlink $*;
            return
        } || _qvs_softlink $*
    };
    function _doqvs_at () 
    { 
        mkdir -p $1;
        _qvs_ln $1 $(_doqvs $(bflist $*))
    };
    function _qvfnames () 
    { 
        for f in "$@";
        do
            [[ -f $f ]] && echo $f;
        done
    };
    _doqvs_at $(qvs_locn)/$(qvs_rwd)/.ver/$(qvs_second)
}

qvs_init

qvs_qrf () 
{ 
    functions $(which qvslib)
}
bflist () 
{ 
    comment OBSOLESCENT bflist in behalf of qvs_list;
    qvs_list $@
}
