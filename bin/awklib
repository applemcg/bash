/usr/bin/awk
awklib_doc () 
{ 
    comment "Copyright (C) 2005-2013, JYATL - Just Yet Another Testing Lab";
    comment "mailto: mcgowan (at) alum DOT mit DOT edu";
    comment bkup: appleton.home./Users/applemcg/bin 2013_0307 104641;
    cat  <<EOF
whch    

    whch is necessary, because of the various ways people have implemented "which"!
 some put an error message on standard out, some dont return a failure if not found.
 whch works uniformly on these known enviroments:

       cygwin, solaris, os_x

shlibtools 

     For shell libraries, shlibtools discovers the names of SOURCE files
  printing the name of the sourcING file and the SOURCEd file
  on the standard output.

    \$ shlibtools \*lib
EOF

}
shlibtools_doc () 
{ 
    awklib_doc 1>&2
}
whch () 
{ 
    set -- $(which $1 2>&1);
    case $1.$2 in 
        no)
            return 1
        ;;
        "".*)
            return 1
        ;;
        *)
            echo $1;
            return 0
        ;;
    esac
}
getAwk () 
{ 
    whch gawk || whch nawk || whch awk
}
shlibtools () 
{ 
    $AWK '$1 ~ /^source$/ { print FILENAME, $2 }' $(onlyfiles $*)
}
onlyfiles () 
{ 
    for arg in ${*:-*};
    do
        [[ -f $arg ]] && echo $arg;
    done
}
unsourced () 
{ 
    shlibtools *lib | sed 's/;//' | grep -v '$[12]' | field 2 | sort -u > .sourced;
    ls *lib | comm -23 - .sourced
}
awklib_init () 
{ 
    source programlib 2> /dev/null;
    awkapp_init
}
awkapp_init () 
{ 
    is AWK $(getAwk);
    copyrightNotice;
    comment e.g. $ fbdy unsourced shlibtools;
    shlibtools_doc 1>&2;
    comment and \$AWK=$AWK;
    awklib_doc 1>&2
}
awklib_init
