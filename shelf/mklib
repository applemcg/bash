local_source () 
{ 
    : now, completely generic;
    : source all local libraries;
    : then load, invoke the _inits;
    : see the list of candidates to include in load;
    for lib in $(local_libs);
    do
        local_canon $lib;
    done;
    local_load;
    local_candidates;
    declare -f local_{source,candidates};
    echo e.g. local_candidates -23 shows the unpublic
}
local_functions () 
{ 
    awk 'NF == 2 && $2 ~ /^\(\)$/ { print $1 }' $1
}
local_canon () 
{ 
    set $1 $1.tmp;
    . $1;
    declare -f $(local_functions $1) > $2;
    mv $2 $1
}
local_libs () 
{ 
    ls ./?*lib | grep -v $BASH_SOURCE
}
local_inits () 
{ 
    awk ' $2 ~ /\(\)/ && $1 ~ /_init$/ { print $1 }' *lib
}
local_load () 
{ 
    for f in $(local_inits);
    do
        $f;
    done
}
local_fundef () 
{ 
    grep "$1.()" ?*lib
}
local_candidates () 
{ 
    comm $1 <(shd_unmfgd $(functions *lib|sort)) <(public_alllocal|sort)
}
echo local_source 1>&2
