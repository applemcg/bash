setpath () 
{ 
    function _presolve () 
    { 
        here=${PWD};
        cd $1;
        PWD=`pwd`;
        case $PATH in 
            *:$PWD:* | *:$PWD | $PWD:*)

            ;;
            *)
                PATH=$PATH:$PWD;
                export PATH
            ;;
        esac;
        cd $here
    };
    case $1 in 
        */bin)
            _presolve $1
        ;;
        *)
            echo "USAGE: setpath {some}/bin" 1>&2
        ;;
    esac
}
do_set_path () 
{ 
    echo .;
    echo $PATH | tr ':' '\012' | grep /bin | sed "s/\/bin/\/$1/"
}
set_path () 
{ 
    do_set_path $1 | tr '\012' ':'
}
whipath () 
{ 
    for dir in $(do_set_path include);
    do
        [[ -f $dir/$1 ]] && { 
            printf "%s" $dir/$1;
            return
        };
    done
}
require () 
{ 
    tool=$1;
    shift;
    bin=$1/bin;
    shift;
    set -- $(which $tool);
    [[ $1 = no ]] || return;
    [[ $2 = $tool ]] || return;
    setpath $bin
}
setpathlib_doc () 
{ 
    cat  <<EOF

setpathlib (1)              JYATL Tool Shed               setpathlib (1)  

NAME

  setpathlib -- set the Users PATH variable

SYNOPSIS

  bitmeld 

  paths   [name defaulting to PATH]

  require  BITMELD    tooln  

  setpath {name ending with}/bin 

  setpathlib_doc 

  set_path  {a BITMELD name, e.g. include}

  whipath  file

DESCRIPTION

  After  "source setpathlib" the functions are enabled.

  setpath appends the directory argument to the user's PATH variable.
In an effort to enforce a bit of a standard practice, any directory
name must conclude with the name "bin" -- just plain "bin".

  paths reports the list of the user's PATH, or other supplied
path-delimited variable name, e.g.  INCLUDE_PATH

  whipath returns the full path to the requested "file" argument from
the user's INCLUDE_PATH variable. this is similar to "which" for files
on the user's PATH.

  bitmeld  returns the nearest BITMELD anchor directory.

  setpathlib_doc  produces user documentation, such as this man page.

  set_path  constructs a BITMELD-related path variable from the 
current PATH.  

  require adds the BITMELD/bin to the users path if the tool is not
found on the current path

EXAMPLES

  $ setpath \$HOME/bin     appends  HOME/bin to the user's PATH if not
                          already included

  $ whipath  stdio.h      returns   /usr/include/stdio.h 
                          on many systems

  $ INCLUDE_PATH=\$(set_path include)   is the default

  $ setpath \$(bitmeld)/bin  adds the local bin to the users path.

     e.g. if in the directory /home/group/apps/src/this
     and a directory          /home/group/apps/bin
     exists, then it's added to the PATH

SEE ALSO

  which(1), sh(1), bash(1), ...

ENVIRONMENT

  PATH  is the list of directories to search for any command at the
shell prompt or execution by other commands or functions.

  INCLUDE_PATH  is set to the users PATH by replacing any /bin
                with /include.  the user may set to any directory list

AUTHOR

  mcgowan@alum.mit.edu

EOF
}
setpathlib_init () 
{ 
    : ${INCLUDE_PATH:=$(set_path include)};
    source programlib 2> /dev/null;
    logUse setpath
    comment setpathlib_doc
}
paths () 
{ 
    eval echo \$${1:-PATH} | sed 's/::/:.:/' | tr : '\012'
}
bitmeld () 
{ 
    pushd ${1:-.} > /dev/null;
    while true; do
        for dir in src bin include tmp man etc lib doc;
        do
            [[ -d $dir ]] && break 2;
        done;
        cd ..;
        case $PWD in 
            /)
                break
            ;;
        esac;
    done;
    pwd;
    popd > /dev/null
}
setpathlib_init
